# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

# Job responsible for installing dependencies
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Test on both Ubuntu and Windows
    defaults:
      run:
        shell: bash  # Use bash shell even for Windows

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Install dependencies
        run: |
          poetry install --no-root

  lint:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Test on both Ubuntu and Windows

    defaults:
      run:
        shell: bash  # Use bash shell even for Windows

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Install dependencies
        run: |
          poetry install --no-root
      - name: Lint with poetry
        run: |
          poetry run task lint

  formatter:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Test on both Ubuntu and Windows

    defaults:
      run:
        shell: bash  # Use bash shell even for Windows

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Install dependencies
        run: |
          poetry install --no-root
      - name: Format with poetry
        run: |
          poetry run task formatter

  security:
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Test on both Ubuntu and Windows

    defaults:
      run:
        shell: bash  # Use bash shell even for Windows

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Install dependencies
        run: |
          poetry install --no-root
      - name: Security with poetry
        run: |
          poetry run task security

  unitests:
    runs-on: ${{ matrix.os }}
    needs: [lint, formatter, security]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]  # Test on both Ubuntu and Windows

    defaults:
      run:
        shell: bash  # Use bash shell even for Windows

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Install dependencies
        run: |
          poetry install --no-root
      - name: Unit test with poetry
        run: |
          poetry run task test
