# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Instalacja zależności
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: build-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install project dependencies
        run: |
          cd example-app
          poetry install --no-root

  # Testy statyczne kodu
  static_code_tests:
    runs-on: ubuntu-latest
    concurrency:
      group: static-code-tests-${{ github.ref }}
      cancel-in-progress: true

    needs: build  

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install project dependencies
        run: |
          cd example-app
          poetry install --no-root

      - name: Run linter
        run: |
          cd example-app
          poetry run task lint

      - name: Run formatter
        run: |
          cd example-app
          poetry run task formatter

      - name: Run security checks
        run: |
          cd example-app
          poetry run task security

  # Testy jednostkowe
  unit_tests:
    runs-on: ubuntu-latest
    concurrency:
      group: unit-tests-${{ github.ref }}
      cancel-in-progress: true

    needs: build  

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install project dependencies
        run: |
          cd example-app  
          poetry install --no-root

      - name: Run unit tests
        run: |
          cd example-app  
          poetry run task test
