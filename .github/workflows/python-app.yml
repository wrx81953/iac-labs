# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # Job responsible for installing dependencies
  build:
    runs-on: ubuntu-latest
    concurrency:
      group: build-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        working-directory: ./example-app  # Work in example-app directory

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4  # Install Poetry dependency manager
      - name: Install dependencies
        run: |
          poetry install --no-root  # Install project dependencies without installing the current package

      # Caching the virtual environment to speed up future runs
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-  # Restore from previous caches if exact match is not found

  # Job responsible for running static code analysis (linter, formatter, security)
  lint:
    runs-on: ubuntu-latest
    needs: build

    concurrency:
      group: lint-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        working-directory: ./example-app

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Install dependencies
        run: |
          poetry install --no-root  # Install dependencies again for this job
      - name: Lint with poetry
        run: |
          poetry run task lint  # Run linter to analyze code quality

      # Caching dependencies to improve performance of future runs
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

  # Job responsible for formatting code
  formatter:
    runs-on: ubuntu-latest
    needs: build

    concurrency:
      group: formatter-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        working-directory: ./example-app

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Install dependencies
        run: |
          poetry install --no-root  # Install dependencies
      - name: Format with poetry
        run: |
          poetry run task formatter  # Run code formatter

      # Caching the virtual environment to speed up future runs
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

  # Job responsible for running security checks
  security:
    runs-on: ubuntu-latest
    needs: build

    concurrency:
      group: security-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        working-directory: ./example-app

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Install dependencies
        run: |
          poetry install --no-root  # Install dependencies
      - name: Security with poetry
        run: |
          poetry run task security  # Run security checks

      # Caching the virtual environment to speed up future runs
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-

  # Job responsible for running unit tests
  unittests:
    runs-on: ubuntu-latest
    needs: [lint, formatter, security]

    concurrency:
      group: unittests-${{ github.ref }}
      cancel-in-progress: true

    defaults:
      run:
        working-directory: ./example-app

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.13
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"
      - name: Install Poetry Action
        uses: snok/install-poetry@v1.3.4
      - name: Install dependencies
        run: |
          poetry install --no-root  # Install dependencies
      - name: Unit test with poetry
        run: |
          poetry run task test  # Run unit tests

      # Caching the virtual environment to speed up future runs
      - name: Cache build venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: ./example-app/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-venv-
